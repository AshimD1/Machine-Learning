# -*- coding: utf-8 -*-
"""Numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14pu-LGvzPx1IzdhK2ZjP8mx1Mw_Tl8kI

# **Numpy Array**
"""

import numpy as np

my_list= [1,2,3,4]

np.array(my_list)

nested_list = [[1,2],[3,4],[5,6]]
nested_list

np.array(nested_list )

np.arange(0,10)

np.arange(0,10,2) #(start,end,step)

np.zeros(3)

np.zeros((4,10))

np.ones(3)

np.ones((4,4))

np.linspace(0,10,3)

np.linspace(0,10,21)

np.eye(5)

np.random.rand(3)

np.random.rand(3,4)

np.random.randn(3)

np.random.randn(3,5)

np.random.randint(1,100)

np.random.randint(1,100,10)

np.random.randint(1,100,(2,3))

np.random.seed(42)
np.random.rand(4)

np.random.rand(4)

arr = np.arange(25)
arr

ranarr= np.random.randint(0,50,10)
ranarr

arr.shape

arr.reshape(5,5)

ranarr

ranarr.max()

ranarr.min()

ranarr.mean()

ranarr.argmin()

ranarr.dtype

myarr= np.random.rand(4)

myarr

myarr.dtype



"""# **Numpy Index**"""

import numpy as np

arr =np.arange(0,11)
arr

arr[8]

arr[1:5]

arr[1:5:2]

arr[0:5]

arr[:5]

arr[5:]

arr

arr[0:5] = 100

arr

arr = np.arange(0,11)

slice_of_arr = arr[0:5]
slice_of_arr

arr

slice_of_arr[:] = 99

slice_of_arr

arr

arr_copy =arr.copy()

arr_copy

arr_copy[:] = 100

arr_copy

arr

arr_2d = np.array([[5,10,15],[20,25,30],[35,40,45]])

arr_2d

arr_2d.shape

arr_2d[0,2]

arr_2d[:2,1:]

arr= np.arange(1,11)

arr

arr>4

bool_arr = arr>4

arr[bool_arr]

arr[arr>4]

"""# **Numpy Operations**"""

import numpy as np

arr =np.arange(0,10)

arr

arr + 5

arr -2

arr + arr # same shape

arr - arr

arr / arr

1/ arr

np.sqrt(arr)

np.sin(arr)

np.log(arr)

arr

arr.sum()

arr.mean()

arr.max()

arr.min()

arr.var()

arr.std()

arr_2d = np.arange(0,25).reshape(5,5)

arr_2d

arr_2d.shape

arr_2d.sum()

arr_2d.sum(axis=0)

arr_2d.sum(axis=1)

arr_2d.max()

arr_2d.min()

arr_2d.mean()

arr_2d.mean(axis=0)

"""# **Numpy exercises**"""

import numpy as np

np.zeros(10)

np.ones(10)

np.ones(10) +4

np.arange(10,51)

arr = np.arange(10,51)

arr[arr%2==0]

np.arange(10,51,2)

arr = np.arange(0,9).reshape(3,3)
arr

np.eye(3)

np.random.rand(1)

np.random.randn(25)

arr = np.arange(1,101)/100
arr.reshape(10,10)

np.linspace(0,1,20)

arr =np.arange(1,26)

mat= arr.reshape(5,5)
mat

mat[2:,1:]

mat[3,4]

a=mat[:3,1]
a.reshape(3,1)

mat[:3,1:2] # to maintain same dimension shape

mat[4,:]

mat[4]

mat[3:]

mat

mat.sum()

mat.std()

mat.sum(axis=0)

np.random.seed(101)
np.random.rand(1)

